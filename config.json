{
    "BASE_HOMEDIR" : "/home/pokybuild",
    "BASE_SHAREDDIR" : "/srv/autobuilder/autobuilder.yocto.io",
    "BASE_PUBLISHDIR" : "/srv/autobuilder/downloads.yoctoproject.org",

    "BUILD_HISTORY_DIR" : "buildhistory",
    "BUILD_HISTORY_REPO" : "ssh://git@push.yoctoproject.org/poky-buildhistory",
    "BUILD_HISTORY_FORKPUSH" : {"poky-contrib:ross/mut" : "poky:master", "poky-contrib:abelloni/master-next": "poky:master", "poky:master-next" : "poky:master"},

    "BUILDTOOLS_URL_TEMPLOCAL" : "/srv/autobuilder/autobuilder.yocto.io/pub/non-release/20210214-8/buildtools/x86_64-buildtools-extended-nativesdk-standalone-3.2+snapshot-7d38cc8e749aedb8435ee71847e04b353cca541d.sh",
    "BUILDTOOLS_URL_TEMPLOCAL2" : "https://downloads.yoctoproject.org/releases/yocto/milestones/yocto-3.1_M3/buildtools/x86_64-buildtools-extended-nativesdk-standalone-3.0+snapshot-20200315.sh",

    "BUILDTOOLS_URL_TEMPLOCAL3" : "https://downloads.yoctoproject.org/releases/yocto/yocto-4.1/buildtools/x86_64-buildtools-extended-nativesdk-standalone-4.1.sh",
    "BUILDTOOLS_ARM_URL_TEMPLOCAL" : "https://downloads.yoctoproject.org/releases/yocto/yocto-4.1/buildtools/aarch64-buildtools-extended-nativesdk-standalone-4.1.sh",
    "BUILDTOOLS_URL" : "/srv/autobuilder/autobuilder.yocto.io/pub/non-release/20230223-18/buildtools/x86_64-buildtools-extended-nativesdk-standalone-4.1+snapshot-9c07de0f20042c81496185293857284048d7912c.sh",
    "BUILDTOOLS_ARM_URL" : "/srv/autobuilder/autobuilder.yocto.io/pub/non-release/20230223-18/buildtools/aarch64-buildtools-extended-nativesdk-standalone-4.1+snapshot-9c07de0f20042c81496185293857284048d7912c.sh",
    "BUILDTOOLS_MAKE_URL" : "https://downloads.yoctoproject.org/releases/yocto/yocto-4.1/buildtools/x86_64-buildtools-make-nativesdk-standalone-4.1.sh",

    "REPO_STASH_DIR" : "${BASE_HOMEDIR}/git/mirror",
    "TRASH_DIR" : "${BASE_HOMEDIR}/git/trash",

    "QAMAIL_TO" : "yocto@lists.yoctoproject.org",
    "QAMAIL_CC" : "qa-build-notification@lists.yoctoproject.org",
    "WEBPUBLISH_DIR" : "${BASE_SHAREDDIR}/",
    "WEBPUBLISH_URL" : "https://autobuilder.yocto.io/",

    "BUILDPERF_STATEDIR" : "${BASE_HOMEDIR}/buildperf",
    "BUILDPERF_RESULTSDIR" : "${BASE_HOMEDIR}/buildperf-results",

    "defaults" : {
        "NEEDREPOS" : ["poky"],
        "DISTRO" : "poky",
        "MACHINE" : "qemux86-64",
        "SDKMACHINE" : "x86_64",
        "PACKAGE_CLASSES" : "package_rpm package_deb package_ipk",
        "DLDIR" : "DL_DIR = '${BASE_SHAREDDIR}/current_sources'",
        "SSTATEDIR" : ["SSTATE_DIR ?= '${BASE_SHAREDDIR}/pub/sstate'"],
        "SSTATEDIR_RELEASE" : ["SSTATE_DIR ?= '${BASE_SHAREDDIR}/pub/sstate'"],
        "SDKEXTRAS" : ["SSTATE_MIRRORS += '\\", "file://.* http://sstate.yoctoproject.org/all/PATH;downloadfilename=PATH'", "BB_HASHSERVE = 'auto'"],
        "BUILDINFO" : false,
        "BUILDHISTORY" : false,
        "BUILDINFOVARS" : ["INHERIT += 'image-buildinfo'", "IMAGE_BUILDINFO_VARS:append = ' IMAGE_BASENAME IMAGE_NAME'"],
        "WRITECONFIG" : true,
        "SENDERRORS" : true,
        "extravars" : [
            "QEMU_USE_KVM = 'True'",
            "INHERIT += 'report-error'",
            "PREMIRRORS = ''",
            "BB_GENERATE_MIRROR_TARBALLS = '1'",
            "BB_NUMBER_THREADS = '16'",
            "BB_NUMBER_PARSE_THREADS = '16'",
            "PARALLEL_MAKE = '-j 16 -l 52'",
            "XZ_MEMLIMIT = '5%'",
            "XZ_THREADS = '8'",
            "ZSTD_THREADS = '8'",
            "BB_TASK_NICE_LEVEL = '5'",
            "BB_TASK_NICE_LEVEL:task-testimage = '0'",
            "BB_TASK_IONICE_LEVEL = '2.7'",
            "BB_TASK_IONICE_LEVEL:task-testimage = '2.1'",
            "IMAGE_CLASSES += 'testimage'",
            "TEST_QEMUBOOT_TIMEOUT = '1500'",
            "SANITY_TESTED_DISTROS = ''",
            "SDK_EXT_TYPE = 'minimal'",
            "SDK_INCLUDE_TOOLCHAIN = '1'",
            "ESDK_LOCAL_CONF_REMOVE:append = 'BB_HASHSERVE'",
            "BB_DISKMON_DIRS = 'STOPTASKS,${TMPDIR},1G,100K STOPTASKS,${DL_DIR},1G STOPTASKS,${SSTATE_DIR},1G STOPTASKS,/tmp,100M,30K HALT,${TMPDIR},100M,1K HALT,${DL_DIR},100M HALT,${SSTATE_DIR},100M HALT,/tmp,10M,1K'",
            "RUNQEMU_TMPFS_DIR = '/home/pokybuild/tmp'",
            "BB_HEARTBEAT_EVENT = '60'",
            "BB_LOG_HOST_STAT_ON_INTERVAL = '1'",
            "BB_LOG_HOST_STAT_CMDS_INTERVAL = 'oe-time-dd-test.sh -c 100 -t 3'",
            "BB_LOG_HOST_STAT_ON_FAILURE = '1'",
            "BB_LOG_HOST_STAT_CMDS_FAILURE = 'oe-time-dd-test.sh -l'",
            "SDK_TOOLCHAIN_LANGS += 'rust'",
            "BB_SERVER_TIMEOUT = '60'"
        ]
    },
    "templates" : {
        "arch-qemu" : {
            "BUILDINFO" : true,
            "BUILDHISTORY" : true,
            "extravars" : [
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "SDKMACHINE" : "x86_64",
                "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-minimal-dev core-image-full-cmdline core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-sato:do_testsdk core-image-minimal:do_testsdkext core-image-sato:do_testsdkext"
            },
            "step2" : {
                "SDKMACHINE" : "i686",
                "BBTARGETS" : "core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            }
        },
        "arch-qemu-lite" : {
            "BUILDINFO" : true,
            "BUILDHISTORY" : true,
            "extravars" : [
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "BBTARGETS" : "core-image-sato core-image-minimal core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato:do_testsdk core-image-minimal:do_testsdkext core-image-sato:do_testsdkext"
            }
        },
        "toolchain-qemu" : {
            "BUILDINFO" : true,
            "extravars" : [
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "shortname" : "Machine oe-selftest",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; DISPLAY=:1 oe-selftest ${HELPERSTMACHTARGS} -j 15"],
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"]
            }
        },
        "altcfg-qemu" : {
            "DISTRO" : "poky-altcfg",
            "BUILDINFO" : true,
            "BUILDHISTORY" : true,
            "extravars" : [
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "BBTARGETS" : "core-image-full-cmdline core-image-sato core-image-sato-sdk",
                "SANITYTARGETS" : "core-image-full-cmdline:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage"
            }
        },
        "altcfg-qemu-lite" : {
            "DISTRO" : "poky-altcfg",
            "BUILDINFO" : true,
            "BUILDHISTORY" : true,
            "extravars" : [
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "BBTARGETS" : "core-image-full-cmdline core-image-sato",
                "SANITYTARGETS" : "core-image-full-cmdline:do_testimage core-image-sato:do_testimage"
            }
        },
        "ptest-qemu" : {
            "BUILDINFO" : true,
            "BBTARGETS" : "core-image-ptest-all",
            "SANITYTARGETS" : "core-image-ptest-all:do_testimage",
            "extravars" : [
                "TEST_SUITES = 'ping ssh ptest'"
            ]
        },
        "ptest-qemu-fast" : {
            "BUILDINFO" : true,
            "BBTARGETS" : "core-image-ptest-fast",
            "SANITYTARGETS" : "core-image-ptest-fast:do_testimage",
            "extravars" : [
                "TEST_SUITES = 'ping ssh ptest'"
            ]
        },
        "ltp-qemu" : {
            "BUILDINFO" : true,
            "BBTARGETS" : "core-image-sato",
            "SANITYTARGETS" : "core-image-sato:do_testimage",
            "extravars" : [
                "IMAGE_INSTALL:append = ' ltp'",
                "TEST_SUITES = 'ping ssh ltp ltp_compliance'",
                "IMAGE_OVERHEAD_FACTOR = '1.0'",
                "IMAGE_ROOTFS_EXTRA_SPACE = '1324288'",
                "QB_MEM:forcevariable = '-m 1024'"
            ]
        },
        "arch-hw" : {
            "BUILDINFO" : true,
            "step1" : {
                "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-ptest-all core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            }
        },
        "arch-hw-qemu" : {
            "BUILDINFO" : true,
            "step1" : {
                "BBTARGETS" : "core-image-minimal core-image-sato core-image-sato-sdk core-image-sato:do_populate_sdk core-image-sato:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-sato:do_testsdk core-image-sato:do_testsdkext"
            },
            "step2" : {
                "shortname" : "Machine oe-selftest",
                "BUILDHISTORY" : false,
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; DISPLAY=:1 oe-selftest -a -t machine -j 15"]
            }
        },
        "altcfg-hw" : {
            "DISTRO" : "poky-altcfg",
            "BUILDINFO" : true,
            "step1" : {
                "BBTARGETS" : "core-image-full-cmdline core-image-sato core-image-sato-sdk"
            }
        },
       "bringup" : {
            "BUILDINFO" : true,
            "SSTATEDIR" : ["SSTATE_DIR ?= '${HELPERBUILDDIR}/sstate'"],
            "MACHINE" : "qemuarm64",
             "step1" : {
                 "SDKMACHINE" : "x86_64",
                 "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk_ext",
                 "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-sato:do_testsdk core-image-minimal:do_testsdkext core-image-sato:do_testsdkext"
             },
            "step2" : {
                "SDKMACHINE" : "x86_64",
                "MACHINE" : "qemux86-64",
                "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-ptest-all core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"

            },
            "step3" : {
                 "SDKMACHINE" : "i686",
                 "BBTARGETS" : "core-image-sato:do_populate_sdk",
                 "SANITYTARGETS" : "core-image-sato:do_testsdk"
             },
            "step4" : {
                "MACHINE" : "qemux86-64",
                "SDKMACHINE" : "i686",
                "BBTARGETS" : "core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            },
            "step5" : {
                "BUILDINFO" : false,
                "MACHINE" : "qemux86-64",
                "SDKMACHINE" : "x86_64",
                "PACKAGE_CLASSES" : "package_rpm",
                "extravars" : [
                    "RPM_GPG_SIGN_CHUNK = '1'"
                ],
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; DISPLAY=:1 oe-selftest -a --skip-tests distrodata.Distrodata.test_checkpkg buildoptions.SourceMirroring.test_yocto_source_mirror -T machine -T toolchain-user -T toolchain-system -j 15"],
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"]
            }
        },
        "buildperf" : {
            "MACHINE" : "qemux86",
            "SSTATEDIR" : ["SSTATE_DIR ?= '${HELPERBUILDDIR}/sstate'"],
            "SSTATEDIR_RELEASE" : ["SSTATE_DIR ?= '${HELPERBUILDDIR}/sstate'"],
            "PACKAGE_CLASSES" : "package_rpm",
            "EXTRAPLAINCMDS" : [
                "${SCRIPTSDIR}/build-perf-test-wrapper -r ${BUILDPERF_RESULTSDIR} -E yocto-perf@lists.yoctoproject.org -d ${BUILDPERF_STATEDIR}/downloads -w ${BASE_HOMEDIR}/build-perf-test -p ${HELPERRESULTSDIR}/${HELPERTARGET} -R ${HELPERREPONAME} -b ${HELPERBRANCHNAME} --push git@push.yoctoproject.org:yocto-buildstats"
            ],
            "extravars" : [
                "BB_NUMBER_THREADS = '24'",
                "BB_NUMBER_PARSE_THREADS = '24'",
                "PARALLEL_MAKE = '-j 24'",
                "DL_DIR = '${BUILDPERF_STATEDIR}/downloads'",
                "CONNECTIVITY_CHECK_URIS = ''",
                "BB_HASHSERVE = 'auto'",
                "BB_LOG_HOST_STAT_CMDS = ''",
                "BB_SERVER_TIMEOUT = '0'"
            ]
        },
        "selftest" : {
            "MACHINE" : "qemux86-64",
            "PACKAGE_CLASSES" : "package_rpm",
            "extravars" : [
                "RPM_GPG_SIGN_CHUNK = '1'",
                "IMAGE_INSTALL:append = ' ssh-pregen-hostkeys'"
            ],
            "step1" : {
                "shortname" : "Bitbake Selftest",
                "EXTRACMDS" : ["bitbake-selftest"]
            },
            "step2" : {
                "shortname" : "OE Selftest",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail/ DISPLAY=:1 oe-selftest -a --skip-tests distrodata.Distrodata.test_checkpkg buildoptions.SourceMirroring.test_yocto_source_mirror reproducible -T machine -T toolchain-user -T toolchain-system -j 15"],
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"]
            },
            "step3" : {
                "shortname" : "Python Linter Report",
                "EXTRACMDS" : ["if [ `which oe-pylint` ]; then mkdir -p ${HELPERRESULTSDIR}/${HELPERTARGET}; oe-pylint > ${HELPERRESULTSDIR}/${HELPERTARGET}/pylint.log || true; fi"]
            },
            "step4" : {
                "shortname" : "OEQA core tests",
                "EXTRACMDS" : ["oe-test core"]
            }
        },
        "reproducible" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "Reproducible Selftest",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail/ DISPLAY=:1 oe-selftest -r reproducible"],
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"]

            }
        },
        "reproducible-meta-oe" : {
            "MACHINE" : "qemux86-64",
            "SDKMACHINE" : "x86_64",
            "NEEDREPOS" : ["poky", "meta-openembedded"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-selftest"
            ],
            "extravars" : [
                "EXCLUDE_FROM_WORLD:layer-core = '1'",
                "EXCLUDE_FROM_WORLD:layer-yocto = '1'",
                "EXCLUDE_FROM_WORLD:layer-yoctobsp = '1'",
                "EXCLUDE_FROM_WORLD:layer-selftest = '1'",
                "OEQA_REPRODUCIBLE_TEST_TARGET = 'world'"
            ],
            "step1" : {
                "shortname" : "Repro meta-oe/meta-filesystems",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-filesystems/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-filesystems -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python",
                    "${BUILDDIR}/../meta-openembedded/meta-networking",
                    "${BUILDDIR}/../meta-openembedded/meta-filesystems"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-networking-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-meta-python = '1'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-filesystems'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-networking'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-networking'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step2" : {
                "shortname" : "Repro meta-oe/meta-gnome",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-gnome/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-gnome -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python",
                    "${BUILDDIR}/../meta-openembedded/meta-networking",
                    "${BUILDDIR}/../meta-openembedded/meta-gnome"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-networking-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-meta-python = '1'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-gnome'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-networking'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-networking'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step3" : {
                "shortname" : "Repro meta-oe/meta-initramfs",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-initramfs/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-initramfs -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-initramfs"
                ]
            },
            "step4" : {
                "shortname" : "Repro meta-oe/meta-multimedia",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-multimedia/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-multimedia -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python",
                    "${BUILDDIR}/../meta-openembedded/meta-multimedia"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-meta-python = '1'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-multimedia'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-multimedia'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step5" : {
                "shortname" : "Repro meta-oe/meta-networking",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-networking/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-networking -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-networking"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-networking'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-networking'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step6" : {
                "shortname" : "Repro meta-oe/meta-oe",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-oe/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-oe -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe"
                ],
                "extravars" : [
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'"
                ]
            },
            "step7" : {
                "shortname" : "Repro meta-oe/meta-perl",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-perl/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-perl -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-perl"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-perl'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-perl'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step8" : {
                "shortname" : "Repro meta-oe/meta-python",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-python/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-python -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'"
                ]
            },
            "step9" : {
                "shortname" : "Repro meta-oe/meta-webserver",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-webserver/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-webserver -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-webserver"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-webserver'",
                    "USERADD_GID_TABLES:append = ' files/static-group-meta-oe'",
                    "USERADD_UID_TABLES:append = ' files/static-passwd-meta-oe'"
                ]
            },
            "step10" : {
                "shortname" : "Repro meta-oe/meta-xfce",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; OEQA_DEBUGGING_SAVED_OUTPUT=${BASE_SHAREDDIR}/pub/repro-fail-openembedded/meta-xfce/ DISPLAY=:1 BB_LOGCONFIG=$(readlink -f $BB_LOGCONFIG) oe-selftest --newbuilddir $BUILDDIR/build-st-meta-xfce -r reproducible"],
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python",
                    "${BUILDDIR}/../meta-openembedded/meta-networking",
                    "${BUILDDIR}/../meta-openembedded/meta-multimedia",
                    "${BUILDDIR}/../meta-openembedded/meta-gnome",
                    "${BUILDDIR}/../meta-openembedded/meta-xfce"
                ],
                "extravars" : [
                    "EXCLUDE_FROM_WORLD:layer-openembedded-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-gnome-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-multimedia-layer = '1'",
                    "EXCLUDE_FROM_WORLD:layer-meta-python = '1'",
                    "EXCLUDE_FROM_WORLD:layer-networking-layer = '1'"
                ]
            }
        },
        "trigger-build" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "Sources pre-fetching",
                "BBTARGETS" : "universe -c fetch -k",
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"],
                "extravars" : [
                    "SOURCE_MIRROR_FETCH = '1'"
                ]
            }
        },
        "trigger-build-posttrigger" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "Source Mirror Selftest",
                "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; DISPLAY=:1 oe-selftest -r buildoptions.SourceMirroring.test_yocto_source_mirror"],
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"]
            }
        }

    },
    "overrides" : {
        "qemuarm-oecore" : {
            "NEEDREPOS" : ["oecore", "bitbake"],
            "MACHINE" : "qemuarm",
            "DISTRO" : "None",
            "extravars" : [
                "INHERIT += 'uninative'",
                "require conf/distro/include/yocto-uninative.inc",
                "BB_SIGNATURE_HANDLER = 'OEEquivHash'"
            ],
            "step1" : {
                "BBTARGETS" : "core-image-sato core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-sato:do_testimage core-image-sato:do_testsdk"
            },
            "step2" : {
                "SDKMACHINE" : "i686",
                "BBTARGETS" : "core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            }
        },
        "qemuarm" : {
            "MACHINE" : "qemuarm",
            "TEMPLATE" : "arch-qemu"
        },
        "qemuarm-tc" : {
            "MACHINE" : "qemuarm",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemuarm-armhost" : {
            "MACHINE" : "qemuarm",
            "BUILDINFO" : true,
            "step1" : {
                "SDKMACHINE" : "aarch64",
                "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-sato:do_testsdk  core-image-minimal:do_testsdkext core-image-sato:do_testsdkext"
            }
        },
        "qemuarm-alt" : {
            "MACHINE" : "qemuarm",
            "TEMPLATE" : "altcfg-qemu"
        },
        "beaglebone" : {
            "MACHINE" : "beaglebone-yocto",
            "TEMPLATE" : "arch-hw",
            "step2" : {
                "BBTARGETS" : "core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk"
            }
        },
        "beaglebone-alt" : {
            "MACHINE" : "beaglebone-yocto",
            "TEMPLATE" : "altcfg-hw"
        },
        "qemuarm64" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "arch-qemu"
        },
        "qemuarm64-tc" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemuarm64-alt" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "altcfg-qemu"
        },
        "qemuarm64-armhost" : {
            "MACHINE" : "qemuarm64",
            "BUILDINFO" : true,
            "step1" : {
                "shortname" : "Sources pre-fetching (arm specific)",
                "BBTARGETS" : "universe -c fetch -k",
                "ADDLAYER" : ["${BUILDDIR}/../meta-selftest"],
                "extravars" : [
                    "SOURCE_MIRROR_FETCH = '1'"
                ]
            },
            "step2" : {
                "SDKMACHINE" : "aarch64",
                "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-sato:do_populate_sdk core-image-minimal:do_populate_sdk_ext core-image-sato:do_populate_sdk_ext",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-sato:do_testsdk  core-image-minimal:do_testsdkext core-image-sato:do_testsdkext"
            }
        },
        "qemuarm64-ptest" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "ptest-qemu"
        },
        "qemuarm64-ptest-fast" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "ptest-qemu-fast"
        },
        "qemuarm64-ltp" : {
            "MACHINE" : "qemuarm64",
            "TEMPLATE" : "ltp-qemu"
        },
        "qemuriscv32" : {
            "MACHINE" : "qemuriscv64",
            "TEMPLATE" : "arch-qemu"
        },
        "qemuriscv64" : {
            "MACHINE" : "qemuriscv64",
            "TEMPLATE" : "arch-qemu"
        },
        "qemuriscv32-tc" : {
            "MACHINE" : "qemuriscv64",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemuriscv64-tc" : {
            "MACHINE" : "qemuriscv64",
            "TEMPLATE" : "toolchain-qemu"
        },

        "qemuriscv64-ptest" : {
            "MACHINE" : "qemuriscv64",
            "TEMPLATE" : "ptest-qemu"
        },
        "qemuppc64" : {
            "MACHINE" : "qemuppc64",
            "TEMPLATE" : "arch-qemu"
        },
        "qemuppc64-tc" : {
            "MACHINE" : "qemuppc64",
            "TEMPLATE" : "toolchain-qemu"
        },

        "meta-arm" : {
            "NEEDREPOS" : ["poky", "meta-arm"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-arm/meta-arm-toolchain",
                "${BUILDDIR}/../meta-arm/meta-arm",
                "${BUILDDIR}/../meta-arm/meta-arm-bsp"
            ],
            "step1": {
                "shortname": "Build for fvp-base",
                "MACHINE": "fvp-base",
                "BBTARGETS": "core-image-minimal core-image-sato core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
                },
            "step2": {
                "shortname": "Build for generic-arm64 (poky)",
                "MACHINE": "generic-arm64",
                "BBTARGETS": "core-image-minimal core-image-sato core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            },
            "step3": {
                "shortname": "Build for generic-arm64 (poky-altcfg)",
                "DISTRO": "poky-altcfg",
                "MACHINE": "generic-arm64",
                "BBTARGETS": "core-image-minimal core-image-sato core-image-sato:do_populate_sdk",
                "SANITYTARGETS" : "core-image-sato:do_testsdk"
            }
        },
        "meta-agl-core" : {
            "NEEDREPOS" : ["poky", "meta-agl"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-agl/meta-agl-core"
            ],
            "DISTRO" : "poky-agl",
            "BUILDINFO" : true,
            "BUILDHISTORY" : true,
            "PACKAGE_CLASSES" : "package_rpm",
            "extravars" : [
                "AGL_FEATURES = 'aglcore'"
            ],
            "step1" : {
                "MACHINE": "qemux86-64",
                "BBTARGETS": "agl-image-core-autobuilder"
            }
        },
        "meta-aws" : {
            "NEEDREPOS" : ["poky", "meta-openembedded", "meta-aws"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-openembedded/meta-oe",
                "${BUILDDIR}/../meta-openembedded/meta-python",
                "${BUILDDIR}/../meta-openembedded/meta-networking",
                "${BUILDDIR}/../meta-openembedded/meta-multimedia",
                "${BUILDDIR}/../meta-aws"
            ],
            "step1" : {
                "MACHINE": "qemux86-64",
                "BBTARGETS": "aws-iot-device-sdk-cpp-v2"
            },
            "step2" : {
                "MACHINE": "qemuarm64",
                "BBTARGETS": "aws-iot-device-sdk-cpp-v2"
            }
        },
        "meta-clang" : {
            "NEEDREPOS" : ["poky", "meta-clang"],
            "extravars" : [
                "TOOLCHAIN = 'clang'"
            ],
            "step1": {
                "shortname": "Build for qemux86-64",
                "MACHINE": "qemux86-64",
                "BBTARGETS": "core-image-sato-sdk",
                "SANITYTARGETS" : "core-image-sato-sdk:do_testimage"
            },
            "step2": {
                "shortname": "Build for qemuarm64",
                "MACHINE": "qemuarm64",
                "BBTARGETS": "core-image-sato-sdk",
                "SANITYTARGETS" : "core-image-sato-sdk:do_testimage"
            }
        },
       "bringup" : {
            "SSTATEDIR" : ["SSTATE_DIR ?= '${HELPERBUILDDIR}/sstate'"],
            "TEMPLATE" : "bringup"
        },
       "bringup-fast" : {
            "TEMPLATE" : "bringup"
        },
        "qemumips" : {
            "MACHINE" : "qemumips",
            "TEMPLATE" : "arch-qemu-lite"
        },
        "qemumips-tc" : {
            "MACHINE" : "qemumips",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemumips-alt" : {
            "MACHINE" : "qemumips",
            "TEMPLATE" : "altcfg-qemu-lite"
        },
        "qemumips64" : {
            "MACHINE" : "qemumips64",
            "TEMPLATE" : "arch-qemu-lite"
        },
        "qemuppc" : {
            "MACHINE" : "qemuppc",
            "TEMPLATE" : "arch-qemu-lite"
        },
        "qemumips64-tc" : {
            "MACHINE" : "qemumips64",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemuppc-tc" : {
            "MACHINE" : "qemuppc",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemuppc-alt" : {
            "MACHINE" : "qemuppc",
            "TEMPLATE" : "altcfg-qemu-lite"
        },
        "qemux86" : {
            "MACHINE" : "qemux86",
            "TEMPLATE" : "arch-qemu",
            "step1" : {
                "extravars" : [
                     "IMAGE_FSTYPES:append = ' wic wic.bmap'"
                ]
            }
        },
        "qemux86-tc" : {
            "MACHINE" : "qemux86",
            "TEMPLATE" : "toolchain-qemu"
        },
        "qemux86-alt" : {
            "MACHINE" : "qemux86",
            "TEMPLATE" : "altcfg-qemu"
        },
        "qemux86-ptest" : {
            "MACHINE" : "qemux86",
            "TEMPLATE" : "ptest-qemu"
        },
        "qemux86-ptest-fast" : {
            "MACHINE" : "qemux86",
            "TEMPLATE" : "ptest-qemu-fast"
        },
        "genericx86" : {
            "MACHINE" : "genericx86",
            "TEMPLATE" : "arch-hw",
            "step1" : {
                "extravars" : [
                     "IMAGE_FSTYPES:append = ' wic wic.bmap'"
                ]
            }
        },
        "genericx86-alt" : {
            "MACHINE" : "genericx86",
            "TEMPLATE" : "altcfg-hw"
        },
        "qemux86-64" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "arch-qemu",
            "step1" : {
                "extravars" : [
                     "IMAGE_FSTYPES:append = ' wic wic.bmap'"
                ]
            }
        },
        "qemux86-64-tc" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "toolchain-qemu"
        },

        "qemux86-64-alt" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "altcfg-qemu"
        },
        "genericx86-64" : {
            "MACHINE" : "genericx86-64",
            "TEMPLATE" : "arch-hw",
            "step1" : {
                "extravars" : [
                     "IMAGE_FSTYPES:append = ' wic wic.bmap'"
                ]
            }
        },
        "meta-intel" : {
            "NEEDREPOS" : ["poky", "meta-intel"],
            "ADDLAYER" : ["${BUILDDIR}/../meta-intel"],
            "MACHINE" : "intel-corei7-64",
            "TEMPLATE" : "arch-hw"
        },
        "genericx86-64-alt" : {
            "MACHINE" : "genericx86-64",
            "TEMPLATE" : "altcfg-hw"
        },
        "qemux86-world" : {
            "MACHINE" : "qemux86-64",
            "BBTARGETS" : "world",
            "extravars" : [
                "require conf/multilib.conf",
                "MULTILIBS = 'multilib:lib32'",
                "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'"
            ]
        },
        "qemux86-world-alt" : {
            "MACHINE" : "qemux86-64",
            "DISTRO" : "poky-altcfg",
            "BBTARGETS" : "world",
            "extravars" : [
                "DISTRO_FEATURES:append = ' api-documentation'",
                "require conf/multilib.conf",
                "MULTILIBS = 'multilib:lib32'",
                "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'"
            ]
        },
        "qemux86-64-x32" : {
            "MACHINE" : "qemux86-64",
            "BUILDINFO" : true,
            "extravars" : [
                "DEFAULTTUNE = 'x86-64-x32'",
                "baselib = \"${@d.getVar('BASE_LIB_tune-' + (d.getVar('DEFAULTTUNE', True) or 'INVALID'), True) or 'lib'}\""
            ],
            "step1" : {
                "BBTARGETS" : "core-image-minimal core-image-sato",
                "SANITYTARGETS" : "core-image-minimal:do_testimage"
            },
            "step2" : {
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "TEST_SUITES:append = ' x32lib'"
                ]
            }
        },
        "qemux86-64-ptest" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "ptest-qemu"
        },
        "qemux86-64-ptest-fast" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "ptest-qemu-fast"
        },
        "qemux86-64-ltp" : {
            "MACHINE" : "qemux86-64",
            "TEMPLATE" : "ltp-qemu"
        },
        "multilib" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "x86-64 lib32-img rpm",
                "description" : "qemux86-64 32bit multilib image with rpm",
                "BBTARGETS" : "lib32-core-image-minimal",
                "SANITYTARGETS" : "lib32-core-image-minimal:do_testimage",
                "extravars" : [
                    "TEST_SUITES = 'ping'",
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib32'",
                    "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'"
                ]
            },
            "step2" : {
                "shortname" : "x86-64 lib32-img ipk",
                "description" : "qemux86-64 32bit multilib image with ipk",
                "PACKAGE_CLASSES" : "package_ipk",
                "BBTARGETS" : "lib32-core-image-minimal",
                "SANITYTARGETS" : "lib32-core-image-minimal:do_testimage",
                "extravars" : [
                    "TEST_SUITES = 'ping'",
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib32'",
                    "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'"
                ]
            },
            "step3" : {
                "shortname" : "x86-64 lib32 rpm",
                "description" : "qemux86-64 64bit image and 32 bit multilibs with rpm",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "TEST_SUITES:append = ' multilib'",
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib32'",
                    "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'",
                    "RPM_PREFER_ELF_ARCH = '1'",
                    "IMAGE_INSTALL:append = ' lib32-connman-gnome pango-module-basic-fc lib32-pango-module-basic-fc'"
                ]
            },
            "step4" : {
                "shortname" : "x86-64 lib32 ipk",
                "description" : "qemux86-64 64bit image and 32 bit multilibs with ipk",
                "PACKAGE_CLASSES" : "package_ipk",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "TEST_SUITES:append = ' multilib'",
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib32'",
                    "DEFAULTTUNE:virtclass-multilib-lib32 = 'x86'",
                    "RPM_PREFER_ELF_ARCH = '1'",
                    "IMAGE_INSTALL:append = ' lib32-connman-gnome pango-module-basic-fc lib32-pango-module-basic-fc'"
                ]
            },
            "step5" : {
                "shortname" : "x86-64 lib64-img",
                "description" : "x86 building 64bit multilib image",
                "MACHINE" : "qemux86",
                "BBTARGETS" : "lib64-core-image-sato lib64-core-image-sato-sdk",
                "extravars" : [
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib64'",
                    "DEFAULTTUNE:virtclass-multilib-lib64 = 'x86-64'"
                ]
            },
            "step6" : {
                "shortname" : "mip64 n32",
                "description" : "qemumips64 image using n32 as default",
                "MACHINE" : "qemumips64",
                "BBTARGETS" : "core-image-minimal core-image-minimal:do_populate_sdk",
                "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-minimal:do_testsdk",
                "extravars" : [
                    "require conf/multilib.conf",
                    "MULTILIBS = 'multilib:lib64 multilib:lib32'",
                    "DEFAULTTUNE = 'mips64-n32'",
                    "DEFAULTTUNE:virtclass-multilib-lib64 = 'mips64'",
                    "DEFAULTTUNE:virtclass-multilib-lib32 = 'mips32r2'"
                ]
            }
        },
        "pkgman-non-rpm" : {
            "BBTARGETS" : "core-image-sato core-image-sato-sdk core-image-minimal core-image-minimal:do_populate_sdk",
            "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-sato:do_testimage core-image-sato-sdk:do_testimage core-image-minimal:do_testsdk",
            "step1" : {
                "shortname" : "x86 ipk",
                "MACHINE" : "qemux86-64",
                "PACKAGE_CLASSES" : "package_ipk"
            },
            "step2" : {
                "shortname" : "x86 deb",
                "MACHINE" : "qemux86-64",
                "PACKAGE_CLASSES" : "package_deb"
            },
            "step3" : {
                "shortname" : "arm ipk",
                "MACHINE" : "qemuarm64",
                "PACKAGE_CLASSES" : "package_ipk"
            },
            "step4" : {
                "shortname" : "arm deb",
                "MACHINE" : "qemuarm64",
                "PACKAGE_CLASSES" : "package_deb"
            }
        },
        "poky-tiny" : {
            "DISTRO" : "poky-tiny",
            "BBTARGETS" : "core-image-minimal",
            "step1" : {
                "MACHINE" : "qemux86",
                "shortname" : "qemux86 poky-tiny"
            },
            "step2" : {
                "MACHINE" : "qemuarm",
                "shortname" : "qemuarm poky-tiny"
            },
            "step3" : {
                "MACHINE" : "qemux86-64",
                "shortname" : "qemux86-64 poky-tiny"
            },
            "step4" : {
                "MACHINE" : "qemuarm64",
                "shortname" : "qemuarm64 poky-tiny"
            }
        },
        "wic" : {
            "BUILDINFO" : true,
            "extravars" : [
                "IMAGE_FSTYPES += ' hddimg'",
                "MACHINE_FEATURES:append = ' efi'"
            ],
            "step1" : {
                "MACHINE" : "qemux86",
                "shortname" : "qemux86 wic",
                "BBTARGETS" : "wic-tools core-image-sato",
                "EXTRACMDS" : [
                    "wic create directdisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86/directdisk/core-image-sato/",
                    "wic create directdisk-gpt -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86/directdisk/core-image-sato/",
                    "wic create mkefidisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86/directdisk/core-image-sato/"
                ]
            },
            "step2" : {
                "MACHINE" : "genericx86",
                "shortname" : "genericx86 wic",
                "BBTARGETS" : "wic-tools core-image-sato",
                "EXTRACMDS" : [
                    "wic create directdisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86/directdisk/core-image-sato/",
                    "wic create directdisk-gpt -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86/directdisk/core-image-sato/",
                    "wic create mkefidisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86/directdisk/core-image-sato/"
                ]
            },
            "step3" : {
                "MACHINE" : "qemux86-64",
                "shortname" : "qemux86-64 wic",
                "BBTARGETS" : "wic-tools core-image-sato",
                "EXTRACMDS" : [
                    "wic create directdisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86-64/directdisk/core-image-sato/",
                    "wic create directdisk-gpt -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86-64/directdisk/core-image-sato/",
                    "wic create mkefidisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/qemux86-64/directdisk/core-image-sato/"
                ]
            },
            "step4" : {
                "MACHINE" : "genericx86-64",
                "shortname" : "genericx86-64 wic",
                "BBTARGETS" : "wic-tools core-image-sato",
                "EXTRACMDS" : [
                    "wic create directdisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86-64/directdisk/core-image-sato/",
                    "wic create directdisk-gpt -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86-64/directdisk/core-image-sato/",
                    "wic create mkefidisk -e core-image-sato -o ${BUILDDIR}/tmp/deploy/wic_images/genericx86-64/directdisk/core-image-sato/"
                ]
            }
        },
        "buildtools" : {
            "BUILDINFO" : true,
            "MACHINE" : "qemux86-64",
            "extravars" : [
                "PACKAGECONFIG:pn-nativesdk-python3:append = ' pgo'"
            ],
            "step1" : {
                "SDKMACHINE" : "x86_64",
                "shortname" : "x86_64 tools",
                "BBTARGETS" : "buildtools-tarball buildtools-docs-tarball buildtools-make-tarball buildtools-extended-tarball uninative-tarball",
                "SANITYTARGETS" : "buildtools-tarball:do_testsdk buildtools-extended-tarball:do_testsdk"
            },
            "step2" : {
                "SDKMACHINE" : "i686",
                "shortname" : "i686 tools",
                "BBTARGETS" : "uninative-tarball"
            },
            "step3" : {
                "SDKMACHINE" : "aarch64",
                "shortname" : "aarch64 tools",
                "BBTARGETS" : "buildtools-tarball buildtools-docs-tarball buildtools-make-tarball buildtools-extended-tarball uninative-tarball"
            }
        },
        "build-appliance" : {
            "MACHINE" : "qemux86-64",
            "DLDIR" : "DL_DIR ?= '${TOPDIR}/downloads'",
            "BUILDAPP_SRCREV" : ["SRCREV_pn-build-appliance-image = '@SRCREV@'", "PV:append:pn-build-appliance-image = '+git${SRCPV}'"],
            "BBTARGETS" : "core-image-minimal core-image-full-cmdline",
            "extravars" : [
                "SOURCE_MIRROR_FETCH = '1'",
                "INHERIT += 'own-mirrors'",
                "SOURCE_MIRROR_URL = 'file://${BASE_SHAREDDIR}/current_sources'"
            ],
            "step1" : {
                "shortname" : "Universe fetch",
                "BBTARGETS" : "universe -k -c fetch"
            },
            "step2" : {
                "shortname" : "BA image build",
                "BBTARGETS" : "build-appliance-image"
            }
        },
        "no-x11" : {
            "MACHINE" : "qemux86-64",
            "BBTARGETS" : "core-image-full-cmdline core-image-weston world",
            "SANITYTARGETS" : "core-image-full-cmdline:do_testimage core-image-weston:do_testimage",
            "extravars" : [
                "DISTRO_FEATURES:remove = 'x11'"
            ],
            "step1" : {
                "shortname" : "Sysvinit weston"
            },
            "step2" : {
                "shortname" : "Systemd weston",
                "extravars" : [
                     "TEST_SUITES:append = ' systemd'",
                     "DISTRO_FEATURES:append = ' pam systemd usrmerge'",
                     "VIRTUAL-RUNTIME_init_manager = 'systemd'",
                     "DISTRO_FEATURES_BACKFILL_CONSIDERED = 'sysvinit'"
                ]
            }
        },
        "musl-qemux86" : {
            "MACHINE" : "qemux86",
            "BBTARGETS" : "core-image-minimal core-image-full-cmdline core-image-sato-sdk world",
            "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-full-cmdline:do_testimage core-image-sato-sdk:do_testimage",
            "extravars" : [
                "TCLIBC = 'musl'"
            ]
        },
        "musl-qemux86-64" : {
            "MACHINE" : "qemux86-64",
            "BUILDINFO" : true,
            "BBTARGETS" : "core-image-minimal core-image-full-cmdline core-image-sato-sdk world",
            "SANITYTARGETS" : "core-image-minimal:do_testimage core-image-full-cmdline:do_testimage core-image-sato-sdk:do_testimage",
            "extravars" : [
                "TCLIBC = 'musl'"
            ]
        },
        "checkuri" : {
            "MACHINE" : "qemux86-64",
            "BBTARGETS" : "universe:do_checkuri",
            "extravars" : [
                "SOURCE_MIRROR_FETCH = '1'",
                "BB_NUMBER_THREADS = '1'",
                "do_checkuri:pn-lsof = ''"
            ]
        },
        "oe-selftest" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-ubuntu" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-debian" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-fedora" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-opensuse" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-centos" : {
            "TEMPLATE" : "selftest"
        },
        "oe-selftest-armhost" : {
            "MACHINE": "qemuarm64",
            "SDKMACHINE": "aarch64",
            "TEMPLATE" : "selftest"
        },
        "reproducible" : {
            "TEMPLATE" : "reproducible"
        },
        "reproducible-meta-oe" : {
            "TEMPLATE" : "reproducible-meta-oe"
        },
        "reproducible-ubuntu" : {
            "TEMPLATE" : "reproducible"
        },
        "reproducible-debian" : {
            "TEMPLATE" : "reproducible"
        },
        "reproducible-fedora" : {
            "TEMPLATE" : "reproducible"
        },
        "reproducible-opensuse" : {
            "TEMPLATE" : "reproducible"
        },
        "reproducible-centos" : {
            "TEMPLATE" : "reproducible"
        },
        "check-layer" : {
            "NEEDREPOS" : ["poky", "meta-mingw"],
            "step1" : {
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-poky"]
            },
            "step2" : {
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-yocto-bsp"]
            },
            "step3" : {
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-mingw"]
            }
        },
        "check-layer-nightly" : {
            "NEEDREPOS" : ["poky", "meta-agl", "meta-arm", "meta-aws", "meta-intel", "meta-ti", "meta-openembedded", "meta-virtualization", "meta-clang"],
            "step1" : {
                "shortname" : "Test meta-agl YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-agl/meta-agl-core ../meta-agl/meta-netboot ../meta-agl/meta-pipewire --dependency ../meta-openembedded/meta-oe ../meta-openembedded/meta-networking ../meta-openembedded/meta-python --no-auto-dependency"]
            },
            "step2" : {
                "shortname" : "Test meta-arm YP Compatibility",
                "MACHINE" : "qemuarm64",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-arm/meta-arm ../meta-arm/meta-arm-toolchain ../meta-arm/meta-arm-bsp ../meta-arm/meta-gem5 ../meta-arm/meta-arm-autonomy --dependency ../meta-openembedded/meta-oe ../meta-openembedded/meta-networking ../meta-openembedded/meta-python ../meta-poky ../meta-openembedded/meta-filesystems ../meta-virtualization --no-auto-dependency"]
            },
            "step3" : {
                "shortname" : "Test meta-aws YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-aws --dependency ../meta-openembedded/meta-oe ../meta-openembedded/meta-networking ../meta-openembedded/meta-multimedia ../meta-openembedded/meta-python -n --no-auto-dependency"]
            },
            "step4" : {
                "shortname" : "Test meta-intel YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-intel --no-auto-dependency"]
            },
            "step5" : {
                "shortname" : "Test meta-ti YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-ti/meta-ti-bsp ../meta-ti/meta-ti-extras --dependency ../meta-arm --no-auto-dependency"]
            },
            "step6" : {
                "shortname" : "Test meta-oe YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-openembedded --no-auto-dependency"]
            },
            "step7" : {
                "shortname" : "Test meta-virtualization YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-virtualization --dependency ../meta-openembedded/meta-oe ../meta-openembedded/meta-networking ../meta-openembedded/meta-python ../meta-openembedded/meta-filesystems --no-auto-dependency"]
            },
            "step8" : {
                "shortname" : "Test meta-clang YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-clang --no-auto-dependency"]
            }
        },
        "metrics" : {
            "NEEDREPOS" : ["poky", "meta-openembedded"],
            "extravars" : [
                "BB_DISKMON_DIRS = ''",
                "BB_SERVER_TIMEOUT = '0'"
            ],
            "step1" : {
                "EXTRACMDS" : ["../../yocto-autobuilder-helper/scripts/run-patchmetrics ../ ../ meta/ ${HELPERRESULTSDIR}/../../patchmetrics ''"]
            },
            "step2" : {
                "EXTRACMDS" : ["../../yocto-autobuilder-helper/scripts/run-patchmetrics ../ ../meta-openembedded/ . ${HELPERRESULTSDIR}/../../patchmetrics meta-oe \"-p meta-*/recipes-*/**/*.patch -p meta-*/recipes-*/**/*.diff\""]
            }
        },
        "metrics-cve" : {
            "NEEDREPOS" : ["poky", "meta-openembedded"],
            "extravars" : [
				"DL_DIR = '/home/yocon/yocto/downloads'",
				"SSTATE_DIR = '/home/yocon/yocto/sstate-cache'",
                "INHERIT += 'cve-check'",
                "BB_DISKMON_DIRS = ''",
                "CVE_CHECK_FORMAT_JSON = '1'",
                "CVE_CHECK_SHOW_WARNINGS = '0'",
                "CVE_DB_UPDATE_INTERVAL = '21600'",
                "BB_SERVER_TIMEOUT = '0'"
            ],
            "step1" : {
                "EXTRACMDS" : ["../../yocto-autobuilder-helper/scripts/run-cvecheck ../ master ${HELPERRESULTSDIR}/../../patchmetrics ''"]
            },
            "step2" : {
				"ADDLAYER" : [
					"${BUILDDIR}/../meta-openembedded/meta-oe",
					"${BUILDDIR}/../meta-openembedded/meta-python",
					"${BUILDDIR}/../meta-openembedded/meta-perl",
					"${BUILDDIR}/../meta-openembedded/meta-networking",
					"${BUILDDIR}/../meta-openembedded/meta-multimedia",
					"${BUILDDIR}/../meta-openembedded/meta-gnome",
					"${BUILDDIR}/../meta-openembedded/meta-xfce",
					"${BUILDDIR}/../meta-openembedded/meta-filesystems",
					"${BUILDDIR}/../meta-openembedded/meta-initramfs",
					"${BUILDDIR}/../meta-openembedded/meta-webserver"
				],
				"extravars" : [
					"EXCLUDE_FROM_WORLD:layer-core = '1'",
					"EXCLUDE_FROM_WORLD:layer-yocto = '1'",
					"EXCLUDE_FROM_WORLD:layer-yoctobsp = '1'"
				],
                "EXTRACMDS" : ["../../yocto-autobuilder-helper/scripts/run-cvecheck ../ master ${HELPERRESULTSDIR}/../../patchmetrics 'meta-oe'"]
            }
        },
        "meta-mingw" : {
            "NEEDREPOS" : ["poky", "meta-mingw"],
            "MACHINE" : "qemux86-64",
            "BBTARGETS" : "core-image-mingw-sdktest:do_populate_sdk",
            "ADDLAYER" : ["${BUILDDIR}/../meta-mingw"],
            "step1" : {
                "SDKMACHINE" : "i686-mingw32"
            },
            "step2" : {
                "SDKMACHINE" : "x86_64-mingw32",
                "SANITYTARGETS" : "core-image-mingw-sdktest:do_testsdk"
            }
        },
        "meta-oe" : {
            "NEEDREPOS" : ["poky", "meta-openembedded"],
            "MACHINE" : "qemux86-64",
            "extravars" : [
                "INHERIT += 'rm_work'"
            ],
            "step1" : {
                "shortname" : "Test meta-oe YP Compatibility",
                "EXTRACMDS" : ["yocto-check-layer-wrapper ../meta-openembedded"]
            },
            "step2" : {
                "ADDLAYER" : [
                    "${BUILDDIR}/../meta-openembedded/meta-oe",
                    "${BUILDDIR}/../meta-openembedded/meta-python",
                    "${BUILDDIR}/../meta-openembedded/meta-networking",
                    "${BUILDDIR}/../meta-openembedded/meta-filesystems"
                ],
                "BBTARGETS" : "world -k"
            }
        },
        "meta-virt" : {
            "NEEDREPOS" : ["poky", "meta-openembedded", "meta-virtualization"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-openembedded/meta-oe",
                "${BUILDDIR}/../meta-openembedded/meta-python",
                "${BUILDDIR}/../meta-openembedded/meta-networking",
                "${BUILDDIR}/../meta-openembedded/meta-filesystems",
                "${BUILDDIR}/../meta-virtualization"
            ],
            "extravars" : [
                "DISTRO_FEATURES:append = ' virtualization xen'"
            ],
            "step1" : {
                "shortname": "Xen for qemux86-64",
                "MACHINE": "qemux86-64",
                "BBTARGETS" : "xen-image-minimal"
            },
            "step2" : {
                "shortname": "Xen for qemuarm64",
                "MACHINE": "qemuarm64",
                "BBTARGETS" : "xen-image-minimal"
            },
            "step3" : {
                "shortname": "Xen for qemuarm",
                "MACHINE": "qemuarm",
                "BBTARGETS" : "xen-image-minimal"
            }
        },
        "qa-extras" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "Readonly rootfs",
                "BBTARGETS" : "core-image-minimal",
                "SANITYTARGETS" : "core-image-minimal:do_testimage",
                "extravars" : [
                    "IMAGE_FEATURES:append = ' read-only-rootfs'"
                ]
            },
            "step2" : {
                "shortname" : "ROOT_HOME testing",
                "BBTARGETS" : "core-image-minimal",
                "SANITYTARGETS" : "core-image-minimal:do_testimage",
                "extravars" : [
                    "ROOT_HOME = '/root'"
                ]
            },
            "step3" : {
                "shortname" : "Full eSDK type",
                "BBTARGETS" : "core-image-minimal:do_populate_sdk_ext",
                "extravars" : [
                    "SDK_EXT_TYPE = 'full'"
                ]
            },
            "step4" : {
                "shortname" : "Prep locked-sigs test",
                "BBTARGETS" : "core-image-sato core-image-sato:do_populate_sdk_ext"
            },
            "step5" : {
                "shortname" : "Prep #2 locked-sigs test",
                "BBTARGETS" : "core-image-sato -S none",
                "EXTRACMDS" : ["${SCRIPTSDIR}/../janitor/clobberdir ${BUILDDIR}/../build/tmp"]
            },
            "step6" : {
                "shortname" : "Test locked-sigs image",
                "BBTARGETS" : "core-image-sato",
                "extravars" : [
                    "TMPDIR = '${TOPDIR}/newtmp'",
                    "require ../locked-sigs.inc"
                ]
            },
            "step7" : {
                "shortname" : "Test locked-sigs eSDK",
                "BBTARGETS" : "core-image-sato:do_populate_sdk_ext",
                "extravars" : [
                    "TMPDIR = '${TOPDIR}/sdktmp'"
                ]
            }
        },
        "qa-extras2" : {
            "MACHINE" : "qemux86-64",
            "step1" : {
                "shortname" : "Test logrotate",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "IMAGE_INSTALL:append = ' logrotate'",
                    "TEST_SUITES:append = ' logrotate'"
                ]
            },
            "step2" : {
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "DISTRO_FEATURES:append = ' pam'",
                    "TEST_SUITES:append = ' pam'"
                ]
            },
            "step3" : {
                "shortname" : "Test skeletoninit",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "IMAGE_INSTALL:append = ' service hello-mod'",
                    "TEST_SUITES:append = ' skeletoninit'"
                ],
                "ADDLAYER" : ["${BUILDDIR}/../meta-skeleton"]
            },
            "step4" : {
                "shortname" : "Systemd with sysvinit compat",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "DISTRO_FEATURES:append = ' systemd usrmerge'",
                    "VIRTUAL-RUNTIME_init_manager = 'systemd'",
                    "TEST_SUITES:append = ' systemd'"
                ]
            },
            "step5" : {
                "shortname" : "Sysvinit with systemd",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "DISTRO_FEATURES:append = ' systemd usrmerge'",
                    "VIRTUAL-RUNTIME_init_manager = 'sysvinit'"
                ]
            },
            "step6" : {
                "shortname" : "Systemd",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "TEST_SUITES:append = ' systemd'",
                    "DISTRO_FEATURES:append = ' systemd usrmerge'",
                    "VIRTUAL-RUNTIME_init_manager = 'systemd'",
                    "DISTRO_FEATURES_BACKFILL_CONSIDERED = 'sysvinit'"
                ]
            },
            "step7" : {
                "shortname" : "Mesa gallium-llvm",
                "BBTARGETS" : "core-image-sato",
                "SANITYTARGETS" : "core-image-sato:do_testimage",
                "extravars" : [
                    "PACKAGECONFIG:append:x86-64:pn-mesa = ' gallium-llvm gallium r600'"
                ]
            },
            "step8" : {
                "shortname" : "preempt-rt",
                "BBTARGETS" : "core-image-full-cmdline",
                "SANITYTARGETS" : "core-image-full-cmdline:do_testimage",
                "extravars" : [
                    "PREFERRED_PROVIDER_virtual/kernel = 'linux-yocto-rt'",
                    "TEST_SUITES:append = ' rt'"
                ]
            }
        },
        "eclipse-plugin-neon" : {
            "NEEDREPOS" : ["eclipse-poky-neon"],
            "WRITECONFIG" : false,
            "SENDERRORS" : false,
            "EXTRAPLAINCMDS" : [
                "cd scripts; ./setup.sh; ECLIPSE_HOME=`pwd`/eclipse/ ./build.sh neon-master master development"
            ]

        },
        "eclipse-plugin-oxygen" : {
            "NEEDREPOS" : ["eclipse-poky-oxygen"],
            "WRITECONFIG" : false,
            "SENDERRORS" : false,
            "EXTRAPLAINCMDS" : [
                "cd scripts; ./setup.sh; ECLIPSE_HOME=`pwd`/eclipse/ ./build.sh oxygen-master master development"
            ]
        },
        "buildperf-debian11" : {
            "TEMPLATE" : "buildperf"
        },
         "buildperf-alma8" : {
            "TEMPLATE" : "buildperf"
        },
        "auh" : {
            "EXTRAPLAINCMDS" : [
                "${SCRIPTSDIR}/setup-auh ${HELPERBUILDDIR}; ${SCRIPTSDIR}/run-auh ${HELPERBUILDDIR} ${WEBPUBLISH_DIR}/pub/auh/"
            ]
        },
        "meta-oe-mirror" : {
            "SDKMACHINE" : "x86_64",
            "MACHINE" : "qemux86-64",
            "NEEDREPOS" : ["poky", "meta-openembedded"],
            "ADDLAYER" : [
                "${BUILDDIR}/../meta-selftest",

                "${BUILDDIR}/../meta-openembedded/meta-oe",
                "${BUILDDIR}/../meta-openembedded/meta-python",
                "${BUILDDIR}/../meta-openembedded/meta-perl",
                "${BUILDDIR}/../meta-openembedded/meta-networking",
                "${BUILDDIR}/../meta-openembedded/meta-multimedia",
                "${BUILDDIR}/../meta-openembedded/meta-gnome",
                "${BUILDDIR}/../meta-openembedded/meta-xfce",
                "${BUILDDIR}/../meta-openembedded/meta-filesystems",
                "${BUILDDIR}/../meta-openembedded/meta-initramfs",
                "${BUILDDIR}/../meta-openembedded/meta-webserver"
            ],
            "step1" : {
                "shortname" : "Sources pre-fetching",
                "BBTARGETS" : "universe -c fetch -k",
                "extravars" : [
                    "SOURCE_MIRROR_FETCH = '1'"
                ]
            },
            "step2" : {
                    "shortname" : "Source Mirror Selftest",
                    "EXTRACMDS" : ["${SCRIPTSDIR}/checkvnc; DISPLAY=:1 oe-selftest -r buildoptions.SourceMirroring.test_yocto_source_mirror"]
            }
        },
        "a-quick" : {
            "TEMPLATE" : "trigger-build"
        },
        "a-quick-posttrigger" : {
            "TEMPLATE" : "trigger-build-posttrigger"
        },
        "a-full" : {
            "TEMPLATE" : "trigger-build"
        },
        "a-full-posttrigger" : {
            "TEMPLATE" : "trigger-build-posttrigger"
        }
    },
    "repo-defaults" : {
        "poky" : {
            "url" : "ssh://git@push.yoctoproject.org/poky",
            "branch" : "master",
            "revision" : "HEAD",
            "checkout-dirname" : ".",
            "no-layer-add" : true,
            "call-init" : true
        },
        "meta-intel" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-intel",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "oecore" : {"url" : "ssh://git@push.openembedded.org/openembedded-core",
            "branch" : "master",
            "revision" : "HEAD",
            "checkout-dirname" : ".",
            "no-layer-add" : true,
            "call-init" : true
        },
        "bitbake" : {
            "url" : "ssh://git@push.openembedded.org/bitbake",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "eclipse-poky-neon" : {
            "url" : "ssh://git@push.yoctoproject.org/eclipse-yocto",
            "branch" : "neon-master",
            "revision" : "HEAD",
            "checkout-dirname" : ".",
            "no-layer-add" : true
        },
        "eclipse-poky-oxygen" : {
            "url" : "ssh://git@push.yoctoproject.org/eclipse-yocto",
            "branch" : "oxygen-master",
            "revision" : "HEAD",
            "checkout-dirname" : ".",
            "no-layer-add" : true
        },
        "meta-mingw" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-mingw",
            "branch" : "master",
            "revision" : "HEAD"
        },
        "meta-gplv2" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-gplv2",
            "branch" : "master",
            "revision" : "HEAD"
        },
        "meta-virtualization" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-virtualization",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-openembedded" : {
            "url" : "ssh://git@push.openembedded.org/meta-openembedded",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-arm" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-arm",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-agl": {
            "url" : "https://git.automotivelinux.org/AGL/meta-agl",
            "branch" : "next",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-aws": {
            "url" : "https://github.com/aws/meta-aws.git",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-clang": {
            "url" : "https://github.com/kraj/meta-clang.git",
            "branch" : "master",
            "revision" : "HEAD"
        },
        "meta-ti" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-ti",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        },
        "meta-security" : {
            "url" : "ssh://git@push.yoctoproject.org/meta-security",
            "branch" : "master",
            "revision" : "HEAD",
            "no-layer-add" : true
        }
    },
    "buildtools" : {
        "debian8*" : "${BUILDTOOLS_URL}",
        "debian9*" : "${BUILDTOOLS_URL}",
        "centos7*" : "${BUILDTOOLS_URL}",
        "ubuntu1604*" : "${BUILDTOOLS_URL}",
        "ubuntu1804-ty-*" : "${BUILDTOOLS_URL}",
        "ubuntu1804-arm-*" : "${BUILDTOOLS_ARM_URL}",
        "alma8*"       : "${BUILDTOOLS_URL}",
        "stream8*"     : "${BUILDTOOLS_URL}",
        "opensuse153*" : "${BUILDTOOLS_URL}",
        "opensuse154*" : "${BUILDTOOLS_URL}",
        "perf-alma8*"  : "${BUILDTOOLS_URL}",
        "perf-centos7*" : "${BUILDTOOLS_URL}",
        "perf-ubuntu1604*" : "${BUILDTOOLS_URL}",
        "perf-ubuntu1804-ty-*" : "${BUILDTOOLS_URL}",
        "perf-ubuntu1804-arm-*" : "${BUILDTOOLS_ARM_URL}"
    }
}
